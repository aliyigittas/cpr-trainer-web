version: '3.8'

services:
  frontend:
    build:
      context: ./cpr-trainer-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./cpr-trainer-frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:8080  # Backend API URL'si
    platform: linux/amd64

  backend:
    build:
      context: ./cpr-trainer-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/cpr
      SPRING_DATASOURCE_USERNAME: cpr-trainer
      SPRING_DATASOURCE_PASSWORD: cprTrainer123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_PROFILES_ACTIVE: dev
      DOCKER_ENV: "true"  # Docker ortamı için çevresel değişken
    env_file:
      - ./cpr-trainer-backend/.env
    volumes:
      - ./db-dumps:/app/dumps  # Host:Container
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
    depends_on:
      - db
      - frontend
    platform: linux/amd64
  
  db:
    image: mysql:8.3
    ports:
      - "3306:3306" # burası proje teslim edilince kaldırılacak dbye dışarıdan erişim olmaması için
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cpr 
      MYSQL_USER: cpr-trainer
      MYSQL_PASSWORD: cprTrainer123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db-dumps/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db-dumps/cpr.sql:/docker-entrypoint-initdb.d/cpr.sql
    platform: linux/amd64
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
volumes:
  mysql_data:
    